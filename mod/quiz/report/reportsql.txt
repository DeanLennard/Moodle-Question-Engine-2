Settings to take into account:

quiz->grademethod: first/last/best/average.

report->show: all attempts/students with/students without/students with an without

currently selected group.

report->show_attempts: all/graded

report->show_questiongrades: yes/no

paging

initials

sortorder

-------------------------------------------
Students without attempts:

SELECT
    u.id || '#0' AS uniqueindex,
    u.id AS userid,
    u.firstname,
    u.lastname,
    u.idnumber,
    u.picture,
    u.imagealt,

FROM git_quiz_attempts quiza
RIGHT JOIN git_user u ON quiza.userid = u.id

WHERE
    (quiza.id IS NULL) AND
    u.id IN (3, 4) AND

ORDER BY
    ...

-------------------------------------------
Students with and without attempts

SELECT
    u.id || '#' || COALESCE(quiza.uniqueid, 0) AS uniqueindex,
    u.id AS userid,
    u.firstname,
    u.lastname,
    u.idnumber,
    u.picture,
    u.imagealt,
    quiza.uniqueid,
    quiza.id AS attemptid,
    quiza.timestart,
    quiza.timefinish,
    quiza.sumgrades

FROM git_quiz_attempts quiza
RIGHT JOIN git_user u ON quiza.userid = u.id

WHERE
    (quiza.quiz = 1 OR quiza.quiz IS NULL) AND
    (quiza.preview = 0 OR quiza.preview IS NULL) AND
    u.id IN (3, 4)

ORDER BY 
    ...

-------------------------------------------
Students with attempts (For all attempts, drop the u.id IN bit.)

SELECT
    u.id || '#' || COALESCE(quiza.uniqueid, 0) AS uniqueindex,
    u.id AS userid,
    u.firstname,
    u.lastname,
    u.idnumber,
    u.picture,
    u.imagealt,
    quiza.uniqueid,
    quiza.id AS attemptid,
    quiza.timestart,
    quiza.timefinish,
    quiza.sumgrades

FROM git_quiz_attempts quiza
JOIN git_user u ON quiza.userid = u.id

WHERE
    quiza.quiz = 1 AND
    quiza.preview = 0 AND
    u.id IN (3, 4)

ORDER BY 
    ...

-------------------------------------------
To order on a quetsion grade, add the JOINs:

JOIN git_question_attempts_new qasort ON qa2.questionusageid = quiza.uniqueid
JOIN (
    SELECT questionattemptid, MAX(id) AS latestid FROM git_question_attempt_steps GROUP BY questionattemptid
) lateststepidsort ON lateststepidsort.questionattemptid = qasort.id
JOIN git_question_attempt_steps qstepsort ON qstepsort.id = lateststepidsort.latestid

before the JOIN on the user table, and the bits

WHERE (qasort.numberinusage = 1 OR qasort.numberinusage IS NULL)

ORDER BY 
    qstepsort.fraction

-------------------------------------------
To highlight the best grade (first, last), add

SELECT
    CASE WHEN quiza.id = gradedattempt.gradedid THEN 1 ELSE 0 END AS isthegradedattempt,

JOIN (
    SELECT userid, MAX(id) AS gradedid
    FROM git_quiz_attempts
    WHERE quiz = 1
    GROUP BY userid
) gradedattempt ON gradedattempt.userid = quiza.userid

For first, change MAX to MIN.

(Sometimes this needs to be in the where too.)

-------------------------------------------
To highlight the best grade (average), add

SELECT
    0 AS isthegradedattempt,

-------------------------------------------
To highlight the best grade (best), add

SELECT
    CASE WHEN quiza.id = gradedattempt.gradedid THEN 1 ELSE 0 END AS isthegradedattempt,

JOIN (
    SELECT qa1.userid, MIN(id) AS gradedid
    FROM git_quiz_attempts qa1
    JOIN (
        SELECT userid, MAX(sumgrades) AS maxgrade
        FROM git_quiz_attempts qa2
        GROUP BY userid
    ) bestgrade ON bestgrade.userid = qa1.userid
    WHERE qa1.sumgrades = bestgrade.maxgrade
    GROUP BY qa1.userid
) gradedattempt ON gradedattempt.userid = quiza.userid
